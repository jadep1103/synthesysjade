#include "constantheader.h"

int main(void){
	char command[MAX_SIZE] = {0};
	char display[MAX_SIZE] = {0};
	int command_length;
	int pid;
	int status;
	int test;
	struct timespec timestart;
	struct timespec timestop;
	
	
	write(STDOUT_FILENO, HELLO, strlen(WELCOME_MESSAGE));
	write(STDOUT_FILENO, REGULAR_PROMPT, strlen(REGULAR_PROMPT));
	
	while(1){
		command_length = read(STDOUT_FILENO, commande, MAX_SIZE);
		
		command[command_length-1] = '\0';
		
		test = strcmp(EXIT, command);
		if(test==0 || command_length==0){
			write(STDOUT_FILENO, BYE, strlen(BYE));
			kill(getpid(),SIGINT);
		}
		
		clock_gettime(CLOCK_REALTIME, &timestart);
		
		pid = fork();
		if(pid==0){
			execlp(command, command, NULL);
			
			write(STDOUT_FILENO, ERR, strlen(ERR));
			kill(getpid(),SIGINT);
		} else {
			wait(&status);
			clock_gettime(CLOCK_REALTIME, &timestop);
			int time = (timestop.tv_nsec - timestart.tv_nsec)/1000000;
			if(WIFSIGNALED(status)){
				sprintf(display, "%s%d%s%d%s%s", SIGNALED_PROMPT, WSTOPSIG(status), "|", time, "ms", END_PROMPT);
				write(STDOUT_FILENO, display, strlen(display));
			} else {
				if(WIFEXITED(status)){
					sprintf(display, "%s%d%s%d%s%s", EXITED_PROMPT, WSTOPSIG(status), "|", time, "ms", END_PROMPT);
					write(STDOUT_FILENO, display, strlen(display));
				}
			}
		}
	}	
}
